{"ast":null,"code":"var _jsxFileName = \"/Users/22-hop2-jawkhlan/Documents/09-bayarjavkhlan/Challange/src/Context/RouterContext/ThemeContext.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ColorModeContext = /*#__PURE__*/createContext();\nconst ThemeContext = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [theme, setTheme] = useState(true);\n  const ColorModeChange = () => {\n    setTheme(!theme);\n  };\n  const [Data, SetData] = useState([]);\n  const [Loading, SetLoading] = useState(false);\n  useEffect(() => {\n    const getData = async () => {\n      SetLoading(true);\n      try {\n        const res = await instance.get(\"/\");\n        SetData(res.data.data);\n      } catch (error) {\n        console.log(error);\n      }\n      SetLoading(false);\n    };\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n      value: {\n        theme: theme,\n        changeTheme: ColorModeChange,\n        Data: Data\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeContext, \"476DHdLSfBDJcf48q1ecPvJAeHY=\");\n_c = ThemeContext;\nexport default ThemeContext;\nvar _c;\n$RefreshReg$(_c, \"ThemeContext\");","map":{"version":3,"names":["React","createContext","useState","ColorModeContext","ThemeContext","children","theme","setTheme","ColorModeChange","Data","SetData","Loading","SetLoading","useEffect","getData","res","instance","get","data","error","console","log","changeTheme"],"sources":["/Users/22-hop2-jawkhlan/Documents/09-bayarjavkhlan/Challange/src/Context/RouterContext/ThemeContext.jsx"],"sourcesContent":["import React from \"react\";\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\n\nexport const ColorModeContext = createContext();\n\nconst ThemeContext = ({ children }) => {\n  const [theme, setTheme] = useState(true);\n\n  const ColorModeChange = () => {\n    setTheme(!theme);\n  };\n\n  const [Data, SetData] = useState([]);\n  const [Loading, SetLoading] = useState(false);\n\n  useEffect(() => {\n    const getData = async () => {\n      SetLoading(true);\n      try {\n        const res = await instance.get(\"/\");\n        SetData(res.data.data);\n      } catch (error) {\n        console.log(error);\n      }\n      SetLoading(false);\n    };\n    getData();\n  }, []);\n\n  return (\n    <div>\n      <ColorModeContext.Provider\n        value={{ theme: theme, changeTheme: ColorModeChange, Data: Data }}\n      >\n        {children}\n      </ColorModeContext.Provider>\n    </div>\n  );\n};\n\nexport default ThemeContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,OAAO;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,OAAO,MAAMC,gBAAgB,gBAAGF,aAAa,EAAE;AAE/C,MAAMG,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMM,eAAe,GAAG,MAAM;IAC5BD,QAAQ,CAAC,CAACD,KAAK,CAAC;EAClB,CAAC;EAED,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7CW,SAAS,CAAC,MAAM;IACd,MAAMC,OAAO,GAAG,YAAY;MAC1BF,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMG,GAAG,GAAG,MAAMC,QAAQ,CAACC,GAAG,CAAC,GAAG,CAAC;QACnCP,OAAO,CAACK,GAAG,CAACG,IAAI,CAACA,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;MACAP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IACDE,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,uBACE,QAAC,gBAAgB,CAAC,QAAQ;MACxB,KAAK,EAAE;QAAER,KAAK,EAAEA,KAAK;QAAEgB,WAAW,EAAEd,eAAe;QAAEC,IAAI,EAAEA;MAAK,CAAE;MAAA,UAEjEJ;IAAQ;MAAA;MAAA;MAAA;IAAA;EACiB;IAAA;IAAA;IAAA;EAAA,QACxB;AAEV,CAAC;AAAC,GAjCID,YAAY;AAAA,KAAZA,YAAY;AAmClB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}